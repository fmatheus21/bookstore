api:
  kafka:
    topic: bookstore_cambium
  messenger: kafka
eureka:
  client:
    service-url:
      defaultZone: http://bookstore:yt76Tdn93@localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
logging:
  file:
    name: ./logs/log-file.log
management:
  endpoints:
    web:
      exposure:
        include: '*'
mq:
  queues:
    bookstore-cambium: bookstore_cambium
openapi:
  application:
    description: Microservice Cambium
    title: Cambium Service
    version: 1.0
resilience4j:
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 10
  ratelimiter:
    instances:
      default:
        limit-for-period: 1
        limit-refresh-period: 1s
  retry:
    instances:
      default:
        enable-exponential-backoff: true
        max-attempts: 5
        wait-duration: 2s
server:
  port: ${PORT:0}
spring:
  application:
    name: cambium-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: ${SPRING_DATASOURCE_PASSWORD:210683}
    url: jdbc:mysql://localhost:3306/bookstore_cambium?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC
    username: ${SPRING_DATASOURCE_USER:root}
  flyway:
    password: ${SPRING_DATASOURCE_PASSWORD:210683}
    url: jdbc:mysql://localhost:3306/bookstore_cambium?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC
    user: ${SPRING_DATASOURCE_USER:root}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
  kafka:
    producer:
      bootstrap-servers:
      - localhost:29092
  profiles:
    active: null
  rabbitmq:
    host: localhost
    password: admin
    port: 5672
    username: admin
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://localhost:9411
